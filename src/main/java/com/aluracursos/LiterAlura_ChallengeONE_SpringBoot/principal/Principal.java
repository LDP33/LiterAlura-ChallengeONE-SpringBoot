package com.aluracursos.LiterAlura_ChallengeONE_SpringBoot.principal;

import com.aluracursos.LiterAlura_ChallengeONE_SpringBoot.repository.LibrosRepository;
import com.aluracursos.LiterAlura_ChallengeONE_SpringBoot.services.ConsumoDeApi;
import com.aluracursos.LiterAlura_ChallengeONE_SpringBoot.services.ConvierteDatos;
import com.aluracursos.LiterAlura_ChallengeONE_SpringBoot.services.LibroService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class Principal {
    private final String URL_BASE = "https://gutendex.com/books/";
    private final java.util.Scanner teclado = new java.util.Scanner(System.in);
    private final ConsumoDeApi consumoApi;
    private final ConvierteDatos conversor;
    private final LibrosRepository repositorio;
    private final LibroService libroService;


    @Autowired
    public Principal(LibrosRepository repositorio, LibroService libroService) {
        this.repositorio = repositorio;
        this.libroService = libroService;
        // Se instancian manualmente; alternativamente podr√≠as inyectarlos
        this.consumoApi = new ConsumoDeApi();
        this.conversor = new ConvierteDatos();
    }

    public void muestraElMenu() {
        int opcion;
        do {
            System.out.println("""
        **************************************
        *       üìö MEN√ö PRINCIPAL üìö         *
        **************************************
          1Ô∏è‚É£  üîç Buscar Libro por T√≠tulo
          2Ô∏è‚É£  üìñ Listar Libros Registrados   
          3Ô∏è‚É£  ‚úçÔ∏è Listar Autores Registrados 
          4Ô∏è‚É£  üèõÔ∏è Listar Autores por A√±o    
          5Ô∏è‚É£  üåç Listar Libros por Idioma
          0Ô∏è‚É£  ‚ùå Salir                     
        **************************************
        """);

            System.out.print("\nüü¢ Selecciona una opci√≥n: ");
            if (teclado.hasNextInt()) {
                opcion = teclado.nextInt();
                teclado.nextLine(); // Limpiar scanner

                switch (opcion) {
                    case 1 -> {
                        var libro = buscarLibroTitulo();
                        if (libro == null) {
                            System.out.println("Volviendo al men√∫ de inicio...");
                        }
                    }
                    case 2 -> mostrarLibrosRegistrados();
                    case 3 -> buscarLibroAutores();
                    case 4 -> buscarLibrosAutoresVivos();
                    case 5 -> buscarLibrosPorIdioma();
                    case 0 -> System.out.println("üî¥ Cerrando el sistema...");
                    default -> System.out.println("‚ö†Ô∏è Opci√≥n no v√°lida.");
                }
            } else {
                System.out.println("‚ùå Entrada inv√°lida, por favor ingresa un n√∫mero.");
                teclado.nextLine(); // Limpiar entrada incorrecta
                opcion = -1;
            }
        } while (opcion != 0);
    }
}
